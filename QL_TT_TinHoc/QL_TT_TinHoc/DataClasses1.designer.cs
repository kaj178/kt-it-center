#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QL_TT_TinHoc
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_TT_TinHoc")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertCaLam(CaLam instance);
    partial void UpdateCaLam(CaLam instance);
    partial void DeleteCaLam(CaLam instance);
    partial void InsertDKKhoaHoc(DKKhoaHoc instance);
    partial void UpdateDKKhoaHoc(DKKhoaHoc instance);
    partial void DeleteDKKhoaHoc(DKKhoaHoc instance);
    partial void InsertGiangVien(GiangVien instance);
    partial void UpdateGiangVien(GiangVien instance);
    partial void DeleteGiangVien(GiangVien instance);
    partial void InsertHocVien(HocVien instance);
    partial void UpdateHocVien(HocVien instance);
    partial void DeleteHocVien(HocVien instance);
    partial void InsertKhoaHoc(KhoaHoc instance);
    partial void UpdateKhoaHoc(KhoaHoc instance);
    partial void DeleteKhoaHoc(KhoaHoc instance);
    partial void InsertLopHoc(LopHoc instance);
    partial void UpdateLopHoc(LopHoc instance);
    partial void DeleteLopHoc(LopHoc instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhongHoc(PhongHoc instance);
    partial void UpdatePhongHoc(PhongHoc instance);
    partial void DeletePhongHoc(PhongHoc instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::QL_TT_TinHoc.Properties.Settings.Default.QL_TT_TinHocConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<CaLam> CaLams
		{
			get
			{
				return this.GetTable<CaLam>();
			}
		}
		
		public System.Data.Linq.Table<DKKhoaHoc> DKKhoaHocs
		{
			get
			{
				return this.GetTable<DKKhoaHoc>();
			}
		}
		
		public System.Data.Linq.Table<GiangVien> GiangViens
		{
			get
			{
				return this.GetTable<GiangVien>();
			}
		}
		
		public System.Data.Linq.Table<HocVien> HocViens
		{
			get
			{
				return this.GetTable<HocVien>();
			}
		}
		
		public System.Data.Linq.Table<KhoaHoc> KhoaHocs
		{
			get
			{
				return this.GetTable<KhoaHoc>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc> LopHocs
		{
			get
			{
				return this.GetTable<LopHoc>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhongHoc> PhongHocs
		{
			get
			{
				return this.GetTable<PhongHoc>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdADMIN;
		
		private string _tk;
		
		private string _mk;
		
		private System.Nullable<int> _IdRole;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdADMINChanging(int value);
    partial void OnIdADMINChanged();
    partial void OntkChanging(string value);
    partial void OntkChanged();
    partial void OnmkChanging(string value);
    partial void OnmkChanged();
    partial void OnIdRoleChanging(System.Nullable<int> value);
    partial void OnIdRoleChanged();
    #endregion
		
		public ADMIN()
		{
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdADMIN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdADMIN
		{
			get
			{
				return this._IdADMIN;
			}
			set
			{
				if ((this._IdADMIN != value))
				{
					this.OnIdADMINChanging(value);
					this.SendPropertyChanging();
					this._IdADMIN = value;
					this.SendPropertyChanged("IdADMIN");
					this.OnIdADMINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tk", DbType="NVarChar(255)")]
		public string tk
		{
			get
			{
				return this._tk;
			}
			set
			{
				if ((this._tk != value))
				{
					this.OntkChanging(value);
					this.SendPropertyChanging();
					this._tk = value;
					this.SendPropertyChanged("tk");
					this.OntkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mk", DbType="NVarChar(255)")]
		public string mk
		{
			get
			{
				return this._mk;
			}
			set
			{
				if ((this._mk != value))
				{
					this.OnmkChanging(value);
					this.SendPropertyChanging();
					this._mk = value;
					this.SendPropertyChanged("mk");
					this.OnmkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRole", DbType="Int")]
		public System.Nullable<int> IdRole
		{
			get
			{
				return this._IdRole;
			}
			set
			{
				if ((this._IdRole != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRoleChanging(value);
					this.SendPropertyChanging();
					this._IdRole = value;
					this.SendPropertyChanged("IdRole");
					this.OnIdRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_ADMIN", Storage="_Role", ThisKey="IdRole", OtherKey="IdRole", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.ADMINs.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.ADMINs.Add(this);
						this._IdRole = value.IdRole;
					}
					else
					{
						this._IdRole = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdRole;
		
		private string _TenRole;
		
		private EntitySet<ADMIN> _ADMINs;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdRoleChanging(int value);
    partial void OnIdRoleChanged();
    partial void OnTenRoleChanging(string value);
    partial void OnTenRoleChanged();
    #endregion
		
		public Role()
		{
			this._ADMINs = new EntitySet<ADMIN>(new Action<ADMIN>(this.attach_ADMINs), new Action<ADMIN>(this.detach_ADMINs));
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRole", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdRole
		{
			get
			{
				return this._IdRole;
			}
			set
			{
				if ((this._IdRole != value))
				{
					this.OnIdRoleChanging(value);
					this.SendPropertyChanging();
					this._IdRole = value;
					this.SendPropertyChanged("IdRole");
					this.OnIdRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenRole", DbType="NVarChar(255)")]
		public string TenRole
		{
			get
			{
				return this._TenRole;
			}
			set
			{
				if ((this._TenRole != value))
				{
					this.OnTenRoleChanging(value);
					this.SendPropertyChanging();
					this._TenRole = value;
					this.SendPropertyChanged("TenRole");
					this.OnTenRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_ADMIN", Storage="_ADMINs", ThisKey="IdRole", OtherKey="IdRole")]
		public EntitySet<ADMIN> ADMINs
		{
			get
			{
				return this._ADMINs;
			}
			set
			{
				this._ADMINs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_NhanVien", Storage="_NhanViens", ThisKey="IdRole", OtherKey="IdRole")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADMINs(ADMIN entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_ADMINs(ADMIN entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CaLam")]
	public partial class CaLam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCaLam;
		
		private System.Nullable<int> _IdNV;
		
		private string _caLam1;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCaLamChanging(int value);
    partial void OnIdCaLamChanged();
    partial void OnIdNVChanging(System.Nullable<int> value);
    partial void OnIdNVChanged();
    partial void OncaLam1Changing(string value);
    partial void OncaLam1Changed();
    #endregion
		
		public CaLam()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCaLam", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCaLam
		{
			get
			{
				return this._IdCaLam;
			}
			set
			{
				if ((this._IdCaLam != value))
				{
					this.OnIdCaLamChanging(value);
					this.SendPropertyChanging();
					this._IdCaLam = value;
					this.SendPropertyChanged("IdCaLam");
					this.OnIdCaLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNV", DbType="Int")]
		public System.Nullable<int> IdNV
		{
			get
			{
				return this._IdNV;
			}
			set
			{
				if ((this._IdNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNVChanging(value);
					this.SendPropertyChanging();
					this._IdNV = value;
					this.SendPropertyChanged("IdNV");
					this.OnIdNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="caLam", Storage="_caLam1", DbType="NVarChar(255)")]
		public string caLam1
		{
			get
			{
				return this._caLam1;
			}
			set
			{
				if ((this._caLam1 != value))
				{
					this.OncaLam1Changing(value);
					this.SendPropertyChanging();
					this._caLam1 = value;
					this.SendPropertyChanged("caLam1");
					this.OncaLam1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_CaLam", Storage="_NhanVien", ThisKey="IdNV", OtherKey="IdNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.CaLams.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.CaLams.Add(this);
						this._IdNV = value.IdNV;
					}
					else
					{
						this._IdNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DKKhoaHoc")]
	public partial class DKKhoaHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDK;
		
		private System.Nullable<int> _MaKhoaHoc;
		
		private System.Nullable<int> _MaHocVien;
		
		private System.Nullable<System.DateTime> _Ngaydk;
		
		private EntityRef<HocVien> _HocVien;
		
		private EntityRef<KhoaHoc> _KhoaHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDKChanging(int value);
    partial void OnIdDKChanged();
    partial void OnMaKhoaHocChanging(System.Nullable<int> value);
    partial void OnMaKhoaHocChanged();
    partial void OnMaHocVienChanging(System.Nullable<int> value);
    partial void OnMaHocVienChanged();
    partial void OnNgaydkChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaydkChanged();
    #endregion
		
		public DKKhoaHoc()
		{
			this._HocVien = default(EntityRef<HocVien>);
			this._KhoaHoc = default(EntityRef<KhoaHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDK
		{
			get
			{
				return this._IdDK;
			}
			set
			{
				if ((this._IdDK != value))
				{
					this.OnIdDKChanging(value);
					this.SendPropertyChanging();
					this._IdDK = value;
					this.SendPropertyChanged("IdDK");
					this.OnIdDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoaHoc", DbType="Int")]
		public System.Nullable<int> MaKhoaHoc
		{
			get
			{
				return this._MaKhoaHoc;
			}
			set
			{
				if ((this._MaKhoaHoc != value))
				{
					if (this._KhoaHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._MaKhoaHoc = value;
					this.SendPropertyChanged("MaKhoaHoc");
					this.OnMaKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocVien", DbType="Int")]
		public System.Nullable<int> MaHocVien
		{
			get
			{
				return this._MaHocVien;
			}
			set
			{
				if ((this._MaHocVien != value))
				{
					if (this._HocVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocVienChanging(value);
					this.SendPropertyChanging();
					this._MaHocVien = value;
					this.SendPropertyChanged("MaHocVien");
					this.OnMaHocVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaydk", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaydk
		{
			get
			{
				return this._Ngaydk;
			}
			set
			{
				if ((this._Ngaydk != value))
				{
					this.OnNgaydkChanging(value);
					this.SendPropertyChanging();
					this._Ngaydk = value;
					this.SendPropertyChanged("Ngaydk");
					this.OnNgaydkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocVien_DKKhoaHoc", Storage="_HocVien", ThisKey="MaHocVien", OtherKey="MaHocVien", IsForeignKey=true)]
		public HocVien HocVien
		{
			get
			{
				return this._HocVien.Entity;
			}
			set
			{
				HocVien previousValue = this._HocVien.Entity;
				if (((previousValue != value) 
							|| (this._HocVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocVien.Entity = null;
						previousValue.DKKhoaHocs.Remove(this);
					}
					this._HocVien.Entity = value;
					if ((value != null))
					{
						value.DKKhoaHocs.Add(this);
						this._MaHocVien = value.MaHocVien;
					}
					else
					{
						this._MaHocVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("HocVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoaHoc_DKKhoaHoc", Storage="_KhoaHoc", ThisKey="MaKhoaHoc", OtherKey="MaKhoaHoc", IsForeignKey=true)]
		public KhoaHoc KhoaHoc
		{
			get
			{
				return this._KhoaHoc.Entity;
			}
			set
			{
				KhoaHoc previousValue = this._KhoaHoc.Entity;
				if (((previousValue != value) 
							|| (this._KhoaHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoaHoc.Entity = null;
						previousValue.DKKhoaHocs.Remove(this);
					}
					this._KhoaHoc.Entity = value;
					if ((value != null))
					{
						value.DKKhoaHocs.Add(this);
						this._MaKhoaHoc = value.MaKhoaHoc;
					}
					else
					{
						this._MaKhoaHoc = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhoaHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiangVien")]
	public partial class GiangVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGiangVien;
		
		private string _HoTen;
		
		private string _Email;
		
		private string _DienThoai;
		
		private string _DiaChi;
		
		private EntitySet<LopHoc> _LopHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiangVienChanging(int value);
    partial void OnMaGiangVienChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public GiangVien()
		{
			this._LopHocs = new EntitySet<LopHoc>(new Action<LopHoc>(this.attach_LopHocs), new Action<LopHoc>(this.detach_LopHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiangVien", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaGiangVien
		{
			get
			{
				return this._MaGiangVien;
			}
			set
			{
				if ((this._MaGiangVien != value))
				{
					this.OnMaGiangVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiangVien = value;
					this.SendPropertyChanged("MaGiangVien");
					this.OnMaGiangVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(255)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(20)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_LopHoc", Storage="_LopHocs", ThisKey="MaGiangVien", OtherKey="MaGiangVien")]
		public EntitySet<LopHoc> LopHocs
		{
			get
			{
				return this._LopHocs;
			}
			set
			{
				this._LopHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = this;
		}
		
		private void detach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocVien")]
	public partial class HocVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHocVien;
		
		private string _HoTen;
		
		private System.Nullable<int> _Tuoi;
		
		private string _GioiTinh;
		
		private string _Email;
		
		private string _DienThoai;
		
		private string _DiaChi;
		
		private EntitySet<DKKhoaHoc> _DKKhoaHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocVienChanging(int value);
    partial void OnMaHocVienChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnTuoiChanging(System.Nullable<int> value);
    partial void OnTuoiChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public HocVien()
		{
			this._DKKhoaHocs = new EntitySet<DKKhoaHoc>(new Action<DKKhoaHoc>(this.attach_DKKhoaHocs), new Action<DKKhoaHoc>(this.detach_DKKhoaHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocVien", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHocVien
		{
			get
			{
				return this._MaHocVien;
			}
			set
			{
				if ((this._MaHocVien != value))
				{
					this.OnMaHocVienChanging(value);
					this.SendPropertyChanging();
					this._MaHocVien = value;
					this.SendPropertyChanged("MaHocVien");
					this.OnMaHocVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(255)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tuoi", DbType="Int")]
		public System.Nullable<int> Tuoi
		{
			get
			{
				return this._Tuoi;
			}
			set
			{
				if ((this._Tuoi != value))
				{
					this.OnTuoiChanging(value);
					this.SendPropertyChanging();
					this._Tuoi = value;
					this.SendPropertyChanged("Tuoi");
					this.OnTuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(20)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocVien_DKKhoaHoc", Storage="_DKKhoaHocs", ThisKey="MaHocVien", OtherKey="MaHocVien")]
		public EntitySet<DKKhoaHoc> DKKhoaHocs
		{
			get
			{
				return this._DKKhoaHocs;
			}
			set
			{
				this._DKKhoaHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DKKhoaHocs(DKKhoaHoc entity)
		{
			this.SendPropertyChanging();
			entity.HocVien = this;
		}
		
		private void detach_DKKhoaHocs(DKKhoaHoc entity)
		{
			this.SendPropertyChanging();
			entity.HocVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhoaHoc")]
	public partial class KhoaHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKhoaHoc;
		
		private string _TenKhoaHoc;
		
		private string _MoTa;
		
		private System.Nullable<int> _GiaKh;
		
		private EntitySet<DKKhoaHoc> _DKKhoaHocs;
		
		private EntitySet<LopHoc> _LopHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoaHocChanging(int value);
    partial void OnMaKhoaHocChanged();
    partial void OnTenKhoaHocChanging(string value);
    partial void OnTenKhoaHocChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnGiaKhChanging(System.Nullable<int> value);
    partial void OnGiaKhChanged();
    #endregion
		
		public KhoaHoc()
		{
			this._DKKhoaHocs = new EntitySet<DKKhoaHoc>(new Action<DKKhoaHoc>(this.attach_DKKhoaHocs), new Action<DKKhoaHoc>(this.detach_DKKhoaHocs));
			this._LopHocs = new EntitySet<LopHoc>(new Action<LopHoc>(this.attach_LopHocs), new Action<LopHoc>(this.detach_LopHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoaHoc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKhoaHoc
		{
			get
			{
				return this._MaKhoaHoc;
			}
			set
			{
				if ((this._MaKhoaHoc != value))
				{
					this.OnMaKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._MaKhoaHoc = value;
					this.SendPropertyChanged("MaKhoaHoc");
					this.OnMaKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoaHoc", DbType="NVarChar(255)")]
		public string TenKhoaHoc
		{
			get
			{
				return this._TenKhoaHoc;
			}
			set
			{
				if ((this._TenKhoaHoc != value))
				{
					this.OnTenKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._TenKhoaHoc = value;
					this.SendPropertyChanged("TenKhoaHoc");
					this.OnTenKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaKh", DbType="Int")]
		public System.Nullable<int> GiaKh
		{
			get
			{
				return this._GiaKh;
			}
			set
			{
				if ((this._GiaKh != value))
				{
					this.OnGiaKhChanging(value);
					this.SendPropertyChanging();
					this._GiaKh = value;
					this.SendPropertyChanged("GiaKh");
					this.OnGiaKhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoaHoc_DKKhoaHoc", Storage="_DKKhoaHocs", ThisKey="MaKhoaHoc", OtherKey="MaKhoaHoc")]
		public EntitySet<DKKhoaHoc> DKKhoaHocs
		{
			get
			{
				return this._DKKhoaHocs;
			}
			set
			{
				this._DKKhoaHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoaHoc_LopHoc", Storage="_LopHocs", ThisKey="MaKhoaHoc", OtherKey="MaKhoaHoc")]
		public EntitySet<LopHoc> LopHocs
		{
			get
			{
				return this._LopHocs;
			}
			set
			{
				this._LopHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DKKhoaHocs(DKKhoaHoc entity)
		{
			this.SendPropertyChanging();
			entity.KhoaHoc = this;
		}
		
		private void detach_DKKhoaHocs(DKKhoaHoc entity)
		{
			this.SendPropertyChanging();
			entity.KhoaHoc = null;
		}
		
		private void attach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.KhoaHoc = this;
		}
		
		private void detach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.KhoaHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc")]
	public partial class LopHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLop;
		
		private string _TenLop;
		
		private System.Nullable<int> _MaPhong;
		
		private System.Nullable<int> _MaGiangVien;
		
		private System.Nullable<int> _MaKhoaHoc;
		
		private EntityRef<GiangVien> _GiangVien;
		
		private EntityRef<KhoaHoc> _KhoaHoc;
		
		private EntityRef<PhongHoc> _PhongHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(int value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnMaPhongChanging(System.Nullable<int> value);
    partial void OnMaPhongChanged();
    partial void OnMaGiangVienChanging(System.Nullable<int> value);
    partial void OnMaGiangVienChanged();
    partial void OnMaKhoaHocChanging(System.Nullable<int> value);
    partial void OnMaKhoaHocChanged();
    #endregion
		
		public LopHoc()
		{
			this._GiangVien = default(EntityRef<GiangVien>);
			this._KhoaHoc = default(EntityRef<KhoaHoc>);
			this._PhongHoc = default(EntityRef<PhongHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(255)")]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="Int")]
		public System.Nullable<int> MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._PhongHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiangVien", DbType="Int")]
		public System.Nullable<int> MaGiangVien
		{
			get
			{
				return this._MaGiangVien;
			}
			set
			{
				if ((this._MaGiangVien != value))
				{
					if (this._GiangVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiangVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiangVien = value;
					this.SendPropertyChanged("MaGiangVien");
					this.OnMaGiangVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoaHoc", DbType="Int")]
		public System.Nullable<int> MaKhoaHoc
		{
			get
			{
				return this._MaKhoaHoc;
			}
			set
			{
				if ((this._MaKhoaHoc != value))
				{
					if (this._KhoaHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._MaKhoaHoc = value;
					this.SendPropertyChanged("MaKhoaHoc");
					this.OnMaKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_LopHoc", Storage="_GiangVien", ThisKey="MaGiangVien", OtherKey="MaGiangVien", IsForeignKey=true)]
		public GiangVien GiangVien
		{
			get
			{
				return this._GiangVien.Entity;
			}
			set
			{
				GiangVien previousValue = this._GiangVien.Entity;
				if (((previousValue != value) 
							|| (this._GiangVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiangVien.Entity = null;
						previousValue.LopHocs.Remove(this);
					}
					this._GiangVien.Entity = value;
					if ((value != null))
					{
						value.LopHocs.Add(this);
						this._MaGiangVien = value.MaGiangVien;
					}
					else
					{
						this._MaGiangVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("GiangVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoaHoc_LopHoc", Storage="_KhoaHoc", ThisKey="MaKhoaHoc", OtherKey="MaKhoaHoc", IsForeignKey=true)]
		public KhoaHoc KhoaHoc
		{
			get
			{
				return this._KhoaHoc.Entity;
			}
			set
			{
				KhoaHoc previousValue = this._KhoaHoc.Entity;
				if (((previousValue != value) 
							|| (this._KhoaHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoaHoc.Entity = null;
						previousValue.LopHocs.Remove(this);
					}
					this._KhoaHoc.Entity = value;
					if ((value != null))
					{
						value.LopHocs.Add(this);
						this._MaKhoaHoc = value.MaKhoaHoc;
					}
					else
					{
						this._MaKhoaHoc = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhoaHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongHoc_LopHoc", Storage="_PhongHoc", ThisKey="MaPhong", OtherKey="MaPhong", IsForeignKey=true)]
		public PhongHoc PhongHoc
		{
			get
			{
				return this._PhongHoc.Entity;
			}
			set
			{
				PhongHoc previousValue = this._PhongHoc.Entity;
				if (((previousValue != value) 
							|| (this._PhongHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongHoc.Entity = null;
						previousValue.LopHocs.Remove(this);
					}
					this._PhongHoc.Entity = value;
					if ((value != null))
					{
						value.LopHocs.Add(this);
						this._MaPhong = value.MaPhong;
					}
					else
					{
						this._MaPhong = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhongHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNV;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private string _DiaChi;
		
		private System.Nullable<int> _MucLuong;
		
		private string _tk;
		
		private string _mk;
		
		private System.Nullable<int> _IdRole;
		
		private EntitySet<CaLam> _CaLams;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNVChanging(int value);
    partial void OnIdNVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnMucLuongChanging(System.Nullable<int> value);
    partial void OnMucLuongChanged();
    partial void OntkChanging(string value);
    partial void OntkChanged();
    partial void OnmkChanging(string value);
    partial void OnmkChanged();
    partial void OnIdRoleChanging(System.Nullable<int> value);
    partial void OnIdRoleChanged();
    #endregion
		
		public NhanVien()
		{
			this._CaLams = new EntitySet<CaLam>(new Action<CaLam>(this.attach_CaLams), new Action<CaLam>(this.detach_CaLams));
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdNV
		{
			get
			{
				return this._IdNV;
			}
			set
			{
				if ((this._IdNV != value))
				{
					this.OnIdNVChanging(value);
					this.SendPropertyChanging();
					this._IdNV = value;
					this.SendPropertyChanged("IdNV");
					this.OnIdNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(255)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(255)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MucLuong", DbType="Int")]
		public System.Nullable<int> MucLuong
		{
			get
			{
				return this._MucLuong;
			}
			set
			{
				if ((this._MucLuong != value))
				{
					this.OnMucLuongChanging(value);
					this.SendPropertyChanging();
					this._MucLuong = value;
					this.SendPropertyChanged("MucLuong");
					this.OnMucLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tk", DbType="NVarChar(255)")]
		public string tk
		{
			get
			{
				return this._tk;
			}
			set
			{
				if ((this._tk != value))
				{
					this.OntkChanging(value);
					this.SendPropertyChanging();
					this._tk = value;
					this.SendPropertyChanged("tk");
					this.OntkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mk", DbType="NVarChar(255)")]
		public string mk
		{
			get
			{
				return this._mk;
			}
			set
			{
				if ((this._mk != value))
				{
					this.OnmkChanging(value);
					this.SendPropertyChanging();
					this._mk = value;
					this.SendPropertyChanged("mk");
					this.OnmkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRole", DbType="Int")]
		public System.Nullable<int> IdRole
		{
			get
			{
				return this._IdRole;
			}
			set
			{
				if ((this._IdRole != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRoleChanging(value);
					this.SendPropertyChanging();
					this._IdRole = value;
					this.SendPropertyChanged("IdRole");
					this.OnIdRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_CaLam", Storage="_CaLams", ThisKey="IdNV", OtherKey="IdNV")]
		public EntitySet<CaLam> CaLams
		{
			get
			{
				return this._CaLams;
			}
			set
			{
				this._CaLams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_NhanVien", Storage="_Role", ThisKey="IdRole", OtherKey="IdRole", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._IdRole = value.IdRole;
					}
					else
					{
						this._IdRole = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CaLams(CaLam entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_CaLams(CaLam entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongHoc")]
	public partial class PhongHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhong;
		
		private string _TenPhong;
		
		private System.Nullable<int> _SucChua;
		
		private EntitySet<LopHoc> _LopHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongChanging(int value);
    partial void OnMaPhongChanged();
    partial void OnTenPhongChanging(string value);
    partial void OnTenPhongChanged();
    partial void OnSucChuaChanging(System.Nullable<int> value);
    partial void OnSucChuaChanged();
    #endregion
		
		public PhongHoc()
		{
			this._LopHocs = new EntitySet<LopHoc>(new Action<LopHoc>(this.attach_LopHocs), new Action<LopHoc>(this.detach_LopHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhong", DbType="NVarChar(255)")]
		public string TenPhong
		{
			get
			{
				return this._TenPhong;
			}
			set
			{
				if ((this._TenPhong != value))
				{
					this.OnTenPhongChanging(value);
					this.SendPropertyChanging();
					this._TenPhong = value;
					this.SendPropertyChanged("TenPhong");
					this.OnTenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SucChua", DbType="Int")]
		public System.Nullable<int> SucChua
		{
			get
			{
				return this._SucChua;
			}
			set
			{
				if ((this._SucChua != value))
				{
					this.OnSucChuaChanging(value);
					this.SendPropertyChanging();
					this._SucChua = value;
					this.SendPropertyChanged("SucChua");
					this.OnSucChuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongHoc_LopHoc", Storage="_LopHocs", ThisKey="MaPhong", OtherKey="MaPhong")]
		public EntitySet<LopHoc> LopHocs
		{
			get
			{
				return this._LopHocs;
			}
			set
			{
				this._LopHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.PhongHoc = this;
		}
		
		private void detach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.PhongHoc = null;
		}
	}
}
#pragma warning restore 1591
